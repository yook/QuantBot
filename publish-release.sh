#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –Ω–æ–≤–æ–≥–æ —Ä–µ–ª–∏–∑–∞ QuantBot
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./publish-release.sh [–≤–µ—Ä—Å–∏—è] [–æ–ø–∏—Å–∞–Ω–∏–µ]

set -e  # –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–∫—Ä–∏–ø—Ç –ø—Ä–∏ –æ—à–∏–±–∫–µ

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
VERSION=${1:-"v1.0.1"}
NOTES=${2:-"–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ä–µ–ª–∏–∑"}

# –£–±—Ä–∞—Ç—å 'v' –∏–∑ –≤–µ—Ä—Å–∏–∏ –¥–ª—è –ø–∞–ø–∫–∏ —Ä–µ–ª–∏–∑–∞
RELEASE_VERSION=${VERSION#v}
RELEASE_DIR="release/$RELEASE_VERSION"

echo "üöÄ –ü—É–±–ª–∏–∫–∞—Ü–∏—è —Ä–µ–ª–∏–∑–∞ $VERSION (–ø–∞–ø–∫–∞: $RELEASE_DIR)"

# 1. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, —á—Ç–æ –±–∏–ª–¥ —Å–æ–±—Ä–∞–Ω
if [ ! -d "$RELEASE_DIR" ]; then
    echo "‚ùå –ü–∞–ø–∫–∞ $RELEASE_DIR –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –°–Ω–∞—á–∞–ª–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ: npm run build"
    exit 1
fi

# 2. –î–æ–±–∞–≤–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ git
echo "üìù –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ git..."
git add .
git commit -m "Release $VERSION" || echo "‚ö†Ô∏è  –ù–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π –¥–ª—è –∫–æ–º–º–∏—Ç–∞"

# 3. –°–æ–∑–¥–∞—Ç—å —Ç–µ–≥
echo "üè∑Ô∏è  –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ–≥–∞ $VERSION..."
git tag -f "$VERSION"

# 4. –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏ —Ç–µ–≥ –Ω–∞ GitHub
echo "üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–∞ GitHub..."
git push
git push origin "$VERSION"

# 5. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞–ª–∏—á–∏–µ GitHub CLI
if ! command -v gh &> /dev/null; then
    echo "‚ö†Ô∏è  GitHub CLI –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –µ–≥–æ: https://cli.github.com/"
    echo "üìã –ü–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –≤—Ä—É—á–Ω—É—é:"
    echo "gh release create $VERSION --title \"Release $VERSION\" --notes \"$NOTES\" \$(find $RELEASE_DIR -type f \( -name \"*.dmg\" -o -name \"*.yml\" -o -name \"*.blockmap\" \))"
    exit 0
fi

# 6. –ù–∞–π—Ç–∏ —Ñ–∞–π–ª—ã –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ (—Ç–æ–ª—å–∫–æ —Ñ–∞–π–ª—ã, –Ω–µ –ø–∞–ø–∫–∏)
RELEASE_FILES=$(find "$RELEASE_DIR" -type f \( -name "*.dmg" -o -name "*.yml" -o -name "*.blockmap" \))

if [ -z "$RELEASE_FILES" ]; then
    echo "‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω—ã —Ñ–∞–π–ª—ã –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –≤ $RELEASE_DIR"
    exit 1
fi

# 7. –°–æ–∑–¥–∞—Ç—å —Ä–µ–ª–∏–∑ –Ω–∞ GitHub
echo "üì¶ –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–ª–∏–∑–∞ –Ω–∞ GitHub..."
gh release create "$VERSION" \
    --title "Release $VERSION" \
    --notes "$NOTES" \
    $RELEASE_FILES

echo "‚úÖ –†–µ–ª–∏–∑ $VERSION –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω!"
echo "üîÑ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –ø–æ–ª—É—á–∞—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏ —Å–ª–µ–¥—É—é—â–µ–º –∑–∞–ø—É—Å–∫–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è."#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –Ω–æ–≤–æ–≥–æ —Ä–µ–ª–∏–∑–∞ QuantBot
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./publish-release.sh [–≤–µ—Ä—Å–∏—è] [–æ–ø–∏—Å–∞–Ω–∏–µ]

set -e  # –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–∫—Ä–∏–ø—Ç –ø—Ä–∏ –æ—à–∏–±–∫–µ

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
VERSION=${1:-"v1.0.1"}
NOTES=${2:-"–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ä–µ–ª–∏–∑"}

# –£–±—Ä–∞—Ç—å 'v' –∏–∑ –≤–µ—Ä—Å–∏–∏ –¥–ª—è –ø–∞–ø–∫–∏ —Ä–µ–ª–∏–∑–∞
RELEASE_VERSION=${VERSION#v}
RELEASE_DIR="release/$RELEASE_VERSION"

echo "üöÄ –ü—É–±–ª–∏–∫–∞—Ü–∏—è —Ä–µ–ª–∏–∑–∞ $VERSION (–ø–∞–ø–∫–∞: $RELEASE_DIR)"

# 1. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, —á—Ç–æ –±–∏–ª–¥ —Å–æ–±—Ä–∞–Ω
if [ ! -d "$RELEASE_DIR" ]; then
    echo "‚ùå –ü–∞–ø–∫–∞ $RELEASE_DIR –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –°–Ω–∞—á–∞–ª–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ: npm run build"
    exit 1
fi

# 2. –î–æ–±–∞–≤–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ git
echo "üìù –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ git..."
git add .
git commit -m "Release $VERSION" || echo "‚ö†Ô∏è  –ù–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π –¥–ª—è –∫–æ–º–º–∏—Ç–∞"

# 3. –°–æ–∑–¥–∞—Ç—å —Ç–µ–≥
echo "üè∑Ô∏è  –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ–≥–∞ $VERSION..."
git tag -f "$VERSION"

# 4. –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏ —Ç–µ–≥ –Ω–∞ GitHub
echo "üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–∞ GitHub..."
git push
git push origin "$VERSION"

# 5. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞–ª–∏—á–∏–µ GitHub CLI
if ! command -v gh &> /dev/null; then
    echo "‚ö†Ô∏è  GitHub CLI –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –µ–≥–æ: https://cli.github.com/"
    echo "üìã –ü–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –≤—Ä—É—á–Ω—É—é:"
    echo "gh release create $VERSION --title \"Release $VERSION\" --notes \"$NOTES\" \$(find $RELEASE_DIR -type f \( -name \"*.dmg\" -o -name \"*.yml\" -o -name \"*.blockmap\" \))"
    exit 0
fi

# 6. –ù–∞–π—Ç–∏ —Ñ–∞–π–ª—ã –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ (—Ç–æ–ª—å–∫–æ —Ñ–∞–π–ª—ã, –Ω–µ –ø–∞–ø–∫–∏)
RELEASE_FILES=$(find "$RELEASE_DIR" -type f \( -name "*.dmg" -o -name "*.yml" -o -name "*.blockmap" \))

if [ -z "$RELEASE_FILES" ]; then
    echo "‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω—ã —Ñ–∞–π–ª—ã –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –≤ $RELEASE_DIR"
    exit 1
fi

# 7. –°–æ–∑–¥–∞—Ç—å —Ä–µ–ª–∏–∑ –Ω–∞ GitHub
echo "üì¶ –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–ª–∏–∑–∞ –Ω–∞ GitHub..."
gh release create "$VERSION" \
    --title "Release $VERSION" \
    --notes "$NOTES" \
    $RELEASE_FILES

echo "‚úÖ –†–µ–ª–∏–∑ $VERSION –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω!"
echo "üîÑ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –ø–æ–ª—É—á–∞—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏ —Å–ª–µ–¥—É—é—â–µ–º –∑–∞–ø—É—Å–∫–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è."